/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import DAO.EventosDAO;
import Entidades.Eventos;
import Util.JPAUtil;
import Util.ModeloTabela;
import Util.Util;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Klaillton
 */
public class ArreEventosEPromocoes extends javax.swing.JFrame {

    private EntityManager manager = new JPAUtil().getEntityManager();

    private EventosDAO edao = new EventosDAO(manager);

    private Eventos e = new Eventos();

    /**
     * Creates new form Eventos
     */
    public ArreEventosEPromocoes() {
        initComponents();
        preencherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoRadio = new javax.swing.ButtonGroup();
        cont_0 = new javax.swing.JRadioButton();
        cont_1 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dataInicio = new javax.swing.JFormattedTextField();
        dataFim = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        expectativa = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        codigo = new javax.swing.JTextField();
        salvar = new javax.swing.JButton();
        limpar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaEventos = new javax.swing.JTable();
        buscarCodigo = new javax.swing.JButton();
        buscarNome = new javax.swing.JButton();

        grupoRadio.add(cont_0);
        cont_0.setSelected(true);
        cont_0.setText("Evento");
        cont_0.setActionCommand("0");
        cont_0.setEnabled(false);

        grupoRadio.add(cont_1);
        cont_1.setText("Promoção");
        cont_1.setActionCommand("1");
        cont_1.setEnabled(false);

        jLabel1.setText("Nome:");

        jLabel2.setText("Data:");

        dataInicio = new JFormattedTextField(setMascara("##/##/####"));
        dataInicio.setEnabled(false);

        dataFim = new JFormattedTextField(setMascara("##/##/####"));
        dataFim.setEnabled(false);

        jLabel3.setText("Até");

        jLabel4.setText("Arrecadação Total:");

        jLabel5.setText("Código:");

        salvar.setText("Salvar");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        limpar.setText("Limpar");
        limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparActionPerformed(evt);
            }
        });

        excluir.setText("Excluir");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        jTabelaEventos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTabelaEventos);

        buscarCodigo.setText("Buscar");
        buscarCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarCodigoActionPerformed(evt);
            }
        });

        buscarNome.setText("Buscar");
        buscarNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarNomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cont_0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cont_1))
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(expectativa, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(codigo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscarCodigo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(salvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(limpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(excluir))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(nome, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(dataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscarNome)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cont_0)
                            .addComponent(cont_1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscarCodigo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscarNome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(expectativa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(salvar)
                            .addComponent(limpar)
                            .addComponent(excluir))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparActionPerformed
        // TODO add your handling code here:
        limparTela();
    }//GEN-LAST:event_limparActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        // TODO add your handling code here:
        if (e.getCodigo() == null || e.getCodigo() <= 0) {
            JOptionPane.showMessageDialog(null, "É necesário selecionar um Evento/Promoção para adicionar a arrecadação!");
        } else {

            e.setNome(nome.getText());
            e.setDataInicio(Util.getDateSQL(dataInicio.getText()));
            e.setDataFim(Util.getDateSQL(dataFim.getText()));
            e.setArrecadacao(Double.parseDouble(expectativa.getText().replaceAll(",", ".")));
            e.setCont(Integer.parseInt(grupoRadio.getSelection().getActionCommand()));

            try {
                e = edao.salvar(e);

                if (e != null) {
                    JOptionPane.showMessageDialog(null, "Evento/Promoção salvo com suceso!");

                    preencherTabela();

                    limparTela();

                } else {
                    JOptionPane.showMessageDialog(null, "Erro ao salvar Evento/Promoção! Verifique os campos e tente novamente!");
                }

            } catch (Exception e) {

                JOptionPane.showMessageDialog(null, "Erro ao salvar Evento/Promoção!");

            }
        }


    }//GEN-LAST:event_salvarActionPerformed

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
        // TODO add your handling code here:
        if (e == null || e.getCodigo() < 0) {
            JOptionPane.showMessageDialog(null, "Nenhum Evento/Promoção selecionado!");
        }

        try {
            edao.delete(e);
            JOptionPane.showMessageDialog(null, "Evento/Promoção deletado com sucesso!");
            preencherTabela();
            limparTela();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível deletar o Evento/Promoção!");
        }

    }//GEN-LAST:event_excluirActionPerformed

    private void buscarCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarCodigoActionPerformed
        // TODO add your handling code here:
        try {
            
            e = edao.busca(Integer.parseInt(codigo.getText()));

            if (e != null) {
                codigo.setText(e.getCodigo().toString());
                nome.setText(e.getNome());
                dataInicio.setText(Util.getDate(e.getDataInicio()));
                dataFim.setText(Util.getDate(e.getDataFim()));
                expectativa.setText(e.getArrecadacao().toString());
                switch (e.getCont()) {
                    case 0:
                        grupoRadio.setSelected(cont_0.getModel(), true);
                        break;
                    case 1:
                        grupoRadio.setSelected(cont_1.getModel(), true);
                        break;
                }

            } else {
                JOptionPane.showMessageDialog(null, "Evento/Promoção não encontrado!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao procurar pelo Evento/Promoção!");
        }
    }//GEN-LAST:event_buscarCodigoActionPerformed

    private void buscarNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarNomeActionPerformed
        // TODO add your handling code here:
        try {
            e = edao.buscaNome(nome.getText());

            if (e != null) {
                codigo.setText(e.getCodigo().toString());
                nome.setText(e.getNome());
                dataInicio.setText(Util.getDate(e.getDataInicio()));
                dataFim.setText(Util.getDate(e.getDataFim()));
                expectativa.setText(e.getArrecadacao().toString());
                switch (e.getCont()) {
                    case 0:
                        grupoRadio.setSelected(cont_0.getModel(), true);
                        break;
                    case 1:
                        grupoRadio.setSelected(cont_1.getModel(), true);
                        break;
                }

            } else {
                JOptionPane.showMessageDialog(null, "Evento/Promoção não encontrado!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao procurar pelo Evento/Promoção!");
        }
    }//GEN-LAST:event_buscarNomeActionPerformed

    private void limparTela() {
        codigo.setText("");
        nome.setText("");
        dataInicio.setText("");
        dataFim.setText("");
        expectativa.setText("");
        e = new Eventos();
    }

    private MaskFormatter setMascara(String mascara) {
        MaskFormatter mask = null;
        try {
            mask = new MaskFormatter(mascara);
        } catch (java.text.ParseException ex) {
        }
        return mask;
    }

    private void preencherTabela() {
//        System.out.println("Preencher tabela invocado!");
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Codigo", "Tipo", "Nome", "Inicio", "Fim", "Expectativa", "Arrecadação"
        };

//        System.out.println("arrayList");
//        System.out.println(SQL);
        try {

            List<Eventos> pesList = edao.getListNamed(manager, Eventos.FIND_ALL);
//            ResultSet pesList = (ResultSet) dao.lista();
//            pesList.first();
            for (Eventos p : pesList) {
                dados.add(new Object[]{
                    p.getCodigo(), p.getCont() == 0 ? "Evento" : "Promoção", p.getNome(),
                    Util.getDate(p.getDataInicio()), Util.getDate(p.getDataFim()),
                    "R$ " + p.getExpectativa(), "R$ " + p.getArrecadacao()

                });
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }

        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaEventos.setModel(modelo);

        jTabelaEventos.getColumnModel().getColumn(0).setPreferredWidth(50); //Codigo       
        jTabelaEventos.getColumnModel().getColumn(1).setPreferredWidth(70); //Tipo do Evento
        jTabelaEventos.getColumnModel().getColumn(2).setPreferredWidth(200); //Nome
        jTabelaEventos.getColumnModel().getColumn(3).setPreferredWidth(150); //Data Inicio
        jTabelaEventos.getColumnModel().getColumn(4).setPreferredWidth(150); //Data Fim
        jTabelaEventos.getColumnModel().getColumn(5).setPreferredWidth(70); //Expectativa
        jTabelaEventos.getColumnModel().getColumn(6).setPreferredWidth(70); //Expectativa

        jTabelaEventos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jTabelaEventos.getTableHeader().setReorderingAllowed(false);
        jTabelaEventos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarCodigo;
    private javax.swing.JButton buscarNome;
    private javax.swing.JTextField codigo;
    private javax.swing.JRadioButton cont_0;
    private javax.swing.JRadioButton cont_1;
    private javax.swing.JFormattedTextField dataFim;
    private javax.swing.JFormattedTextField dataInicio;
    private javax.swing.JButton excluir;
    private javax.swing.JTextField expectativa;
    private javax.swing.ButtonGroup grupoRadio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabelaEventos;
    private javax.swing.JButton limpar;
    private javax.swing.JTextField nome;
    private javax.swing.JButton salvar;
    // End of variables declaration//GEN-END:variables
}
